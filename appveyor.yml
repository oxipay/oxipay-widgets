branches:
  only:
    - master
environment:
  access_key:
    secure: UvGZuMN7cMD8Sa0hN5v2tky70NJZsxDiKWQaau/+s8E=
  secret_key:
    secure: mMKmFPTJVUqgGIgJ+dJW0lCMYxJx4x8Vuv7KriN/AVh6vnv7gy3wn1ixsOOKT3nq
install:
  - cmd: npm install
build: off
on_success:
- cmd: npm run build
- ps: |
    Write-Host "Branch is '$env:APPVEYOR_REPO_BRANCH'"
      Set-DefaultAWSRegion -Region ap-southeast-2
      Write-Host "Encrypted AWS access key: '$env:access_key'"
      Write-Host "Encrypted secret key: '$env:secret_key'"
      Set-AWSCredentials -AccessKey $env:access_key -SecretKey $env:secret_key
      $bucketName = "widgets.oxipay.com.au"
      $existingItems = Get-S3Object -BucketName $bucketName
      Write-Host "Removing objects from '$bucketName'"
      foreach($s3object in $existingItems) {
        Remove-S3Object -BucketName $bucketName -Key $s3object.Key -Force:$true
      } 
      cd dist/au
      $itemsToUpload = Get-ChildItem -exclude *.map -Path (pwd).path
      Write-Host "Uploading site to '$bucketName'"
      foreach($itemToUpload in $itemsToUpload) {
        $objectName = $itemToUpload.FullName -replace [Regex]::Escape((Get-Item -Path ".\" -Verbose).FullName+"\"), ""
        if ($objectName -like "*.*") {
          Write-S3Object -BucketName $bucketName -File $objectName -Key $objectName
        } else {
          Write-S3Object -BucketName $bucketName -Directory $objectName -KeyPrefix $objectName -Recurse
        }
      }
      ## NZ deploy
      $bucketName = "widgets.oxipay.co.nz"
      $existingItems = Get-S3Object -BucketName $bucketName
      Write-Host "Removing objects from '$bucketName'"
      foreach($s3object in $existingItems) {
        Remove-S3Object -BucketName $bucketName -Key $s3object.Key -Force:$true
      }
      cd ..
      cd ..
      cd dist/nz
      $itemsToUpload = Get-ChildItem -exclude *.map -Path (pwd).path
      Write-Host "Uploading site to '$bucketName'"
      foreach($itemToUpload in $itemsToUpload) {
        $objectName = $itemToUpload.FullName -replace [Regex]::Escape((Get-Item -Path ".\" -Verbose).FullName+"\"), ""
        if ($objectName -like "*.*") {
          Write-S3Object -BucketName $bucketName -File $objectName -Key $objectName
        } else {
          Write-S3Object -BucketName $bucketName -Directory $objectName -KeyPrefix $objectName -Recurse
        }
      }

notifications:
  - provider: Email
    to:
      - devadmin@oxipay.com.au
      - pit@oxipay.com.au
  - provider: Slack
    auth_token:
      secure: yXpzER0fyDmh7wYR6zrrES+wGzz5010OpUvpb5UPMsQZO12Ag3TaeOjSsZ0tDQQ4WaNoNngsPOPiaYWmsfg3fhJrSyPy240FqSwDdhSPqC0=
    channel: '#alerts'